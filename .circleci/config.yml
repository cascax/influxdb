version: "2.1"

executors:
  cross-builder:
    docker:
      # NOTE: To upgrade the Go version, first push the upgrade to the cross-builder Dockerfile in the edge repo,
      # then update the version here to match.
      - image: quay.io/influxdb/cross-builder:go1.17.2-f7b4e805fa9588c1c2fa4562ea29e576557fb797
    resource_class: large
  linux-amd64:
    machine:
      image: ubuntu-2004:202101-01
      resource_class: large
  linux-arm64:
    machine:
      image: ubuntu-2004:202101-01
      resource_class: arm.large
  darwin:
    macos:
      xcode: 12.4.0
      resource_class: medium
    shell: /bin/bash -eo pipefail
  windows:
    machine:
      image: windows-server-2019-vs2019:stable
      resource_class: windows.medium
    shell: bash.exe -eo pipefail

workflows:
  version: 2
  validate-push:
    jobs:
      - lint
      - build:
          build-type: snapshot
          matrix:
            parameters:
              os: [ linux, darwin, windows ]
              arch: [ amd64, arm64 ]
            exclude:
              - os: darwin
                arch: arm64
              - os: windows
                arch: arm64
      - test-build:
          matrix:
            parameters:
              os: [ linux, darwin, windows ]
              arch: [ amd64, arm64 ]
            exclude:
              - os: darwin
                arch: arm64
              - os: windows
                arch: arm64
              # linux/amd64 can be tested directly from our cross-builder image
              # to save time & enable running with the race detector.
              - os: linux
                arch: amd64
      - test-race:
          name: test-linux-amd64
      - test-prebuilt:
          name: test-linux-arm64
          executor: linux-arm64
          requires:
            - test-build-arm64-linux
      - test-prebuilt:
          name: test-darwin
          executor: darwin
          requires:
            - test-build-amd64-darwin
      - test-prebuilt:
          name: test-windows
          executor: windows
          requires:
            - test-build-amd64-windows

jobs:
  lint:
    executor: cross-builder
    steps:
      - checkout
      - run:
          name: Check go version
          command: ./scripts/ci/check-system-go-matches-go-mod.sh
          when: always
      - run:
          name: Check flag generation
          command: ./scripts/ci/lint/flags.bash
          when: always
      - run:
          name: Check SQL migrations
          command: make checksqlmigrations
          when: always
      - run:
          name: Check formatting
          command: make checkfmt
          when: always
      - run:
          name: Check codegen
          command: make checkgenerate
          when: always
      - run:
          name: vet
          command: make vet
          when: always
      - run:
          name: staticcheck
          command: |
            go install honnef.co/go/tools/cmd/staticcheck
            staticcheck ./...
          when: always

  build:
    executor: cross-builder
    parameters:
      os:
        type: string
      arch:
        type: string
      build-type:
        type: string
    steps:
      - checkout
      - run:
          name: Generate UI assets
          command: make generate-web-assets
      - run:
          name: Build binaries
          command: |
            export GOOS=<< parameters.os >>
            export GOARCH=<< parameters.arch >>
            ./scripts/ci/build.sh "dist/influxd_$(go env GOOS)_$(go env GOARCH)" "<< parameters.build-type >>" ./cmd/influxd
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: .
          paths:
            - dist

  test-build:
    executor: cross-builder
    resource_class: large
    parameters:
      os:
        type: string
      arch:
        type: string
    steps:
      - checkout
      - run:
          name: Build test binaries
          command: |
            export GOOS=<< parameters.os >>
            export GOARCH=<< parameters.arch >>
            ./scripts/ci/build-tests.sh ./test-bin
      - persist_to_workspace:
          root: .
          paths:
            - ./test-bin

  test-prebuilt:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    parallelism: 8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: ./scripts/ci/run-prebuilt-tests.sh $(pwd)/test-bin $(pwd)/test-results
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results
          destination: raw-test-results

  test-race:
    executor: cross-builder
    parallelism: 8
    steps:
      - checkout
      - run:
          name: Run race tests
          command: ./scripts/ci/run-race-tests.sh $(pwd)/test-results
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results
          destination: raw-test-results
